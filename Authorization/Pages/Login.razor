@page "/login"
@using Authorization.Models
@using Authorization.Services
@inject NavigationManager Navigation;
@inject CustomAuthenticationStateProvider AuthStateProvider;

<h3>Login to Access Application</h3>

<div class="alert alert-info">
    Kirish uchun username: "batchat_pro" password: "12345678".
</div>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="alert alert-danger" hidden="@loginModel.LoginFailureHidden">
        Invalid login attempt, please correct and try again.
    </div>
    <div class="form-group">
        <label>Username</label>
        <InputText id="email" @bind-Value="loginModel.Username" class="form-control" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>
    <div class="form-group mt-1">
        <button type="submit" class="btn btn-primary w-100">Login Now</button>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private AccountService accountService = new();
    private async Task HandleValidSubmit()
    {
        //Valiate user acount
        var successful = accountService.ValidateLogin(out string jwtToken, loginModel);

        //Not successful, don't need to do anything
        if (!successful)
            return;

        //Call login and recirect
        await AuthStateProvider.Login(jwtToken);
        Navigation.NavigateTo(""); //Root URL
    }
}
